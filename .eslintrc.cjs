module.exports = {
  root: true,
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: ['./tsconfig.eslint.json'],
    ecmaVersion: 'latest',
    sourceType: 'module',
    extraFileExtensions: ['.md'],
  },
  env: {
    browser: true,
    node: true,
    es2022: true,
  },
  plugins: ['@typescript-eslint', 'unused-imports', 'import', 'markdown'],
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-type-checked',
    'plugin:import/typescript',
  ],
  rules: {
    'no-unused-vars': 'off',
    '@typescript-eslint/no-unused-vars': [
      'error',
      { argsIgnorePattern: '^_', varsIgnorePattern: '^_' },
    ],
    'unused-imports/no-unused-imports': 'error',
    'unused-imports/no-unused-vars': [
      'error',
      {
        vars: 'all',
        varsIgnorePattern: '^_',
        args: 'after-used',
        argsIgnorePattern: '^_',
      },
    ],
    curly: ['error', 'all'],
    'max-len': [
      'error',
      {
        code: 80,
        ignoreUrls: true,
        ignoreStrings: true,
        ignoreTemplateLiterals: true,
        ignoreRegExpLiterals: true,
      },
    ],
    'max-lines': [
      'error',
      {
        max: 250,
        skipBlankLines: true,
        skipComments: true,
      },
    ],
    'id-length': [
      'error',
      {
        min: 3,
        properties: 'never',
        exceptions: [
          '_',
          'id',
          'to',
          'up',
          'el',
          'cb',
          'op',
          'db',
          'ui',
          'fc',
          'AP',
          'HP',
          'xp',
          'ok',
          'g',
          'ai',
          'n',
          'r',
          'it',
          'x',
          'y',
          'z',
          'i',
          'j',
          'a',
          'b',
          'c',
          'd',
          'e',
          'f',
          'l',
          'p',
          's',
          't',
        ],
      },
    ],
    '@typescript-eslint/no-explicit-any': 'error',
    '@typescript-eslint/consistent-type-imports': [
      'error',
      { prefer: 'type-imports', fixStyle: 'separate-type-imports' },
    ],
    '@typescript-eslint/ban-ts-comment': [
      'error',
      { 'ts-ignore': true, 'ts-nocheck': true },
    ],
    'import/no-duplicates': 'error',
  },
  overrides: [
    {
      files: [
        'packages/**/tests/**/*.ts',
        'packages/**/tests/**/*.tsx',
        'tests/**/*.ts',
        'tests/**/*.tsx',
      ],
      rules: {
        '@typescript-eslint/no-unsafe-assignment': 'off',
        '@typescript-eslint/no-unsafe-member-access': 'off',
        '@typescript-eslint/no-unsafe-argument': 'off',
        '@typescript-eslint/no-unsafe-return': 'off',
        '@typescript-eslint/no-unsafe-call': 'off',
        '@typescript-eslint/no-unnecessary-type-assertion': 'off',
        curly: 'off',
        'id-length': 'off',
        'max-len': 'off',
      },
    },
    {
      files: [
        'packages/engine/tests/**/*.ts',
        'packages/engine/tests/**/*.tsx',
        'tests/**/*.ts',
        'tests/**/*.tsx',
      ],
      rules: {
        'check-test-content': 'error',
      },
    },
    {
      files: ['**/*.md'],
      processor: 'markdown/markdown',
    },
    {
      files: ['**/*.md/*.ts', '**/*.md/*.tsx'],
      parserOptions: {
        project: null,
      },
      rules: {
        'max-len': 'off',
        'max-lines': 'off',
      },
    },
  ],
};
